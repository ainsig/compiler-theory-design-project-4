Nonterminals useless in grammar

    arithmetic_operator


Rules useless in grammar

   67 arithmetic_operator: REMOP
   68                    | EXOP


State 12 conflicts: 1 reduce/reduce
State 45 conflicts: 1 shift/reduce
State 60 conflicts: 3 shift/reduce
State 79 conflicts: 3 shift/reduce
State 95 conflicts: 1 shift/reduce, 3 reduce/reduce
State 96 conflicts: 1 shift/reduce, 3 reduce/reduce
State 97 conflicts: 3 shift/reduce
State 98 conflicts: 4 reduce/reduce
State 100 conflicts: 1 shift/reduce
State 107 conflicts: 3 reduce/reduce
State 109 conflicts: 3 shift/reduce


Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';'
    3                | error ';'

    4 type: INTEGER
    5     | REAL
    6     | CHARACTER
    7     | LIST OF type

    8 optional_variable: variable_list
    9                  | variable
   10                  | ε

   11 variable_list: variable
   12              | variable_list variable

   13 variable: IDENTIFIER ':' type IS list ';'
   14         | IDENTIFIER ':' type IS expression ';'
   15         | error ';'

   16 list: '(' expressions ')'

   17 parameters: parameter_list
   18           | ε

   19 parameter_list: parameter
   20               | parameter_list ',' parameter

   21 parameter: IDENTIFIER ':' type

   22 expressions: expressions ',' expression
   23            | expression

   24 body: BEGIN_ statement_ END ';'

   25 statement_: statement ';'
   26           | error ';'

   27 statement: expression
   28          | WHEN condition ',' expression ':' expression
   29          | SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH
   30          | IF condition THEN statement_ elsif_statements ELSE statement_ ENDIF
   31          | FOLD direction operator list_choice ENDFOLD

   32 elsif_statements: elsif_statement elsif_statements
   33                 | ε

   34 elsif_statement: ELSIF condition THEN statement_

   35 direction: LEFT
   36          | RIGHT

   37 operator: ADDOP
   38         | MULOP

   39 list_choice: list
   40            | IDENTIFIER

   41 cases: cases case
   42      | ε

   43 case: CASE INT_LITERAL ARROW statement ';'
   44     | error ';'

   45 condition: condition ANDOP relation
   46          | relation

   47 relation: expression RELOP expression
   48         | condition logical_operator condition
   49         | '(' condition ')'
   50         | NOTOP condition

   51 logical_operator: OROP
   52                 | NOTOP

   53 expression: expression ADDOP term
   54           | expression REMOP term
   55           | term

   56 term: term MULOP primary
   57     | primary

   58 primary: '(' expression ')'
   59        | NEGOP expression
   60        | INT_LITERAL
   61        | HEX_LITERAL
   62        | CHAR_LITERAL
   63        | REAL_LITERAL
   64        | IDENTIFIER '(' expression ')'
   65        | IDENTIFIER
   66        | expression EXOP expression


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 16 49 58 64
    ')' (41) 16 49 58 64
    ',' (44) 20 22 28
    ':' (58) 13 14 21 28
    ';' (59) 2 3 13 14 15 24 25 26 29 43 44
    error (256) 3 15 26 44
    IDENTIFIER <iden> (258) 2 13 14 21 40 64 65
    INT_LITERAL <type> (259) 43 60
    CHAR_LITERAL <type> (260) 62
    REAL_LITERAL <type> (261) 63
    HEX_LITERAL <type> (262) 61
    ADDOP (263) 37 53
    MULOP (264) 38 56
    RELOP (265) 47
    ANDOP (266) 45
    ARROW (267) 29 43
    BEGIN_ (268) 24
    CASE (269) 43
    CHARACTER (270) 6
    ELSE (271) 30
    END (272) 24
    ENDSWITCH (273) 29
    FUNCTION (274) 2
    INTEGER (275) 4
    IS (276) 13 14 29
    LIST (277) 7
    OF (278) 7
    OTHERS (279) 29
    RETURNS (280) 2
    SWITCH (281) 29
    WHEN (282) 28
    REMOP (283) 54
    EXOP (284) 66
    NEGOP (285) 59
    OROP (286) 51
    NOTOP (287) 50 52
    ELSIF (288) 34
    ENDFOLD (289) 31
    ENDIF (290) 30
    FOLD (291) 31
    IF (292) 30
    LEFT (293) 35
    REAL (294) 5
    RIGHT (295) 36
    THEN (296) 30 34


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    function <type> (48)
        on left: 1
        on right: 0
    function_header <type> (49)
        on left: 2 3
        on right: 1
    type <type> (50)
        on left: 4 5 6 7
        on right: 2 7 13 14 21
    optional_variable (51)
        on left: 8 9 10
        on right: 1
    variable_list (52)
        on left: 11 12
        on right: 8 12
    variable (53)
        on left: 13 14 15
        on right: 9 11 12
    list <type> (54)
        on left: 16
        on right: 13 39
    parameters (55)
        on left: 17 18
        on right: 2
    parameter_list (56)
        on left: 19 20
        on right: 17 20
    parameter (57)
        on left: 21
        on right: 19 20
    expressions <type> (58)
        on left: 22 23
        on right: 16 22
    body <type> (59)
        on left: 24
        on right: 1
    statement_ <type> (60)
        on left: 25 26
        on right: 24 30 34
    statement <type> (61)
        on left: 27 28 29 30 31
        on right: 25 29 43
    elsif_statements <type> (62)
        on left: 32 33
        on right: 30 32
    elsif_statement <type> (63)
        on left: 34
        on right: 32
    direction (64)
        on left: 35 36
        on right: 31
    operator (65)
        on left: 37 38
        on right: 31
    list_choice <type> (66)
        on left: 39 40
        on right: 31
    cases <type> (67)
        on left: 41 42
        on right: 29 41
    case <type> (68)
        on left: 43 44
        on right: 41
    condition <type> (69)
        on left: 45 46
        on right: 28 30 34 45 48 49 50
    relation <type> (70)
        on left: 47 48 49 50
        on right: 45 46
    logical_operator (71)
        on left: 51 52
        on right: 48
    expression <type> (72)
        on left: 53 54 55
        on right: 14 22 23 27 28 29 47 53 54 58 59 64 66
    term <type> (73)
        on left: 56 57
        on right: 53 54 55 56
    primary <type> (74)
        on left: 58 59 60 61 62 63 64 65 66
        on right: 56 57


State 0

    0 $accept: • function $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    function         go to state 3
    function_header  go to state 4


State 1

    3 function_header: error • ';'

    ';'  shift, and go to state 5


State 2

    2 function_header: FUNCTION • IDENTIFIER parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 6


State 3

    0 $accept: function • $end

    $end  shift, and go to state 7


State 4

    1 function: function_header • optional_variable body

    error       shift, and go to state 8
    IDENTIFIER  shift, and go to state 9

    BEGIN_  reduce using rule 10 (optional_variable)

    optional_variable  go to state 10
    variable_list      go to state 11
    variable           go to state 12


State 5

    3 function_header: error ';' •

    $default  reduce using rule 3 (function_header)


State 6

    2 function_header: FUNCTION IDENTIFIER • parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 13

    $default  reduce using rule 18 (parameters)

    parameters      go to state 14
    parameter_list  go to state 15
    parameter       go to state 16


State 7

    0 $accept: function $end •

    $default  accept


State 8

   15 variable: error • ';'

    ';'  shift, and go to state 17


State 9

   13 variable: IDENTIFIER • ':' type IS list ';'
   14         | IDENTIFIER • ':' type IS expression ';'

    ':'  shift, and go to state 18


State 10

    1 function: function_header optional_variable • body

    BEGIN_  shift, and go to state 19

    body  go to state 20


State 11

    8 optional_variable: variable_list •
   12 variable_list: variable_list • variable

    error       shift, and go to state 8
    IDENTIFIER  shift, and go to state 9

    BEGIN_  reduce using rule 8 (optional_variable)

    variable  go to state 21


State 12

    9 optional_variable: variable •
   11 variable_list: variable •

    BEGIN_    reduce using rule 9 (optional_variable)
    BEGIN_    [reduce using rule 11 (variable_list)]
    $default  reduce using rule 11 (variable_list)


State 13

   21 parameter: IDENTIFIER • ':' type

    ':'  shift, and go to state 22


State 14

    2 function_header: FUNCTION IDENTIFIER parameters • RETURNS type ';'

    RETURNS  shift, and go to state 23


State 15

   17 parameters: parameter_list •
   20 parameter_list: parameter_list • ',' parameter

    ','  shift, and go to state 24

    $default  reduce using rule 17 (parameters)


State 16

   19 parameter_list: parameter •

    $default  reduce using rule 19 (parameter_list)


State 17

   15 variable: error ';' •

    $default  reduce using rule 15 (variable)


State 18

   13 variable: IDENTIFIER ':' • type IS list ';'
   14         | IDENTIFIER ':' • type IS expression ';'

    CHARACTER  shift, and go to state 25
    INTEGER    shift, and go to state 26
    LIST       shift, and go to state 27
    REAL       shift, and go to state 28

    type  go to state 29


State 19

   24 body: BEGIN_ • statement_ END ';'

    error         shift, and go to state 30
    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    SWITCH        shift, and go to state 36
    WHEN          shift, and go to state 37
    NEGOP         shift, and go to state 38
    FOLD          shift, and go to state 39
    IF            shift, and go to state 40
    '('           shift, and go to state 41

    statement_  go to state 42
    statement   go to state 43
    expression  go to state 44
    term        go to state 45
    primary     go to state 46


State 20

    1 function: function_header optional_variable body •

    $default  reduce using rule 1 (function)


State 21

   12 variable_list: variable_list variable •

    $default  reduce using rule 12 (variable_list)


State 22

   21 parameter: IDENTIFIER ':' • type

    CHARACTER  shift, and go to state 25
    INTEGER    shift, and go to state 26
    LIST       shift, and go to state 27
    REAL       shift, and go to state 28

    type  go to state 47


State 23

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS • type ';'

    CHARACTER  shift, and go to state 25
    INTEGER    shift, and go to state 26
    LIST       shift, and go to state 27
    REAL       shift, and go to state 28

    type  go to state 48


State 24

   20 parameter_list: parameter_list ',' • parameter

    IDENTIFIER  shift, and go to state 13

    parameter  go to state 49


State 25

    6 type: CHARACTER •

    $default  reduce using rule 6 (type)


State 26

    4 type: INTEGER •

    $default  reduce using rule 4 (type)


State 27

    7 type: LIST • OF type

    OF  shift, and go to state 50


State 28

    5 type: REAL •

    $default  reduce using rule 5 (type)


State 29

   13 variable: IDENTIFIER ':' type • IS list ';'
   14         | IDENTIFIER ':' type • IS expression ';'

    IS  shift, and go to state 51


State 30

   26 statement_: error • ';'

    ';'  shift, and go to state 52


State 31

   64 primary: IDENTIFIER • '(' expression ')'
   65        | IDENTIFIER •

    '('  shift, and go to state 53

    $default  reduce using rule 65 (primary)


State 32

   60 primary: INT_LITERAL •

    $default  reduce using rule 60 (primary)


State 33

   62 primary: CHAR_LITERAL •

    $default  reduce using rule 62 (primary)


State 34

   63 primary: REAL_LITERAL •

    $default  reduce using rule 63 (primary)


State 35

   61 primary: HEX_LITERAL •

    $default  reduce using rule 61 (primary)


State 36

   29 statement: SWITCH • expression IS cases OTHERS ARROW statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 41

    expression  go to state 54
    term        go to state 45
    primary     go to state 46


State 37

   28 statement: WHEN • condition ',' expression ':' expression

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    NOTOP         shift, and go to state 55
    '('           shift, and go to state 56

    condition   go to state 57
    relation    go to state 58
    expression  go to state 59
    term        go to state 45
    primary     go to state 46


State 38

   59 primary: NEGOP • expression

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 41

    expression  go to state 60
    term        go to state 45
    primary     go to state 46


State 39

   31 statement: FOLD • direction operator list_choice ENDFOLD

    LEFT   shift, and go to state 61
    RIGHT  shift, and go to state 62

    direction  go to state 63


State 40

   30 statement: IF • condition THEN statement_ elsif_statements ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    NOTOP         shift, and go to state 55
    '('           shift, and go to state 56

    condition   go to state 64
    relation    go to state 58
    expression  go to state 59
    term        go to state 45
    primary     go to state 46


State 41

   58 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 41

    expression  go to state 65
    term        go to state 45
    primary     go to state 46


State 42

   24 body: BEGIN_ statement_ • END ';'

    END  shift, and go to state 66


State 43

   25 statement_: statement • ';'

    ';'  shift, and go to state 67


State 44

   27 statement: expression •
   53 expression: expression • ADDOP term
   54           | expression • REMOP term
   66 primary: expression • EXOP expression

    ADDOP  shift, and go to state 68
    REMOP  shift, and go to state 69
    EXOP   shift, and go to state 70

    $default  reduce using rule 27 (statement)


State 45

   55 expression: term •
   56 term: term • MULOP primary

    MULOP  shift, and go to state 71

    MULOP     [reduce using rule 55 (expression)]
    $default  reduce using rule 55 (expression)


State 46

   57 term: primary •

    $default  reduce using rule 57 (term)


State 47

   21 parameter: IDENTIFIER ':' type •

    $default  reduce using rule 21 (parameter)


State 48

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type • ';'

    ';'  shift, and go to state 72


State 49

   20 parameter_list: parameter_list ',' parameter •

    $default  reduce using rule 20 (parameter_list)


State 50

    7 type: LIST OF • type

    CHARACTER  shift, and go to state 25
    INTEGER    shift, and go to state 26
    LIST       shift, and go to state 27
    REAL       shift, and go to state 28

    type  go to state 73


State 51

   13 variable: IDENTIFIER ':' type IS • list ';'
   14         | IDENTIFIER ':' type IS • expression ';'

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 74

    list        go to state 75
    expression  go to state 76
    term        go to state 45
    primary     go to state 46


State 52

   26 statement_: error ';' •

    $default  reduce using rule 26 (statement_)


State 53

   64 primary: IDENTIFIER '(' • expression ')'

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 41

    expression  go to state 77
    term        go to state 45
    primary     go to state 46


State 54

   29 statement: SWITCH expression • IS cases OTHERS ARROW statement ';' ENDSWITCH
   53 expression: expression • ADDOP term
   54           | expression • REMOP term
   66 primary: expression • EXOP expression

    ADDOP  shift, and go to state 68
    IS     shift, and go to state 78
    REMOP  shift, and go to state 69
    EXOP   shift, and go to state 70


State 55

   50 relation: NOTOP • condition

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    NOTOP         shift, and go to state 55
    '('           shift, and go to state 56

    condition   go to state 79
    relation    go to state 58
    expression  go to state 59
    term        go to state 45
    primary     go to state 46


State 56

   49 relation: '(' • condition ')'
   58 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    NOTOP         shift, and go to state 55
    '('           shift, and go to state 56

    condition   go to state 80
    relation    go to state 58
    expression  go to state 81
    term        go to state 45
    primary     go to state 46


State 57

   28 statement: WHEN condition • ',' expression ':' expression
   45 condition: condition • ANDOP relation
   48 relation: condition • logical_operator condition

    ANDOP  shift, and go to state 82
    OROP   shift, and go to state 83
    NOTOP  shift, and go to state 84
    ','    shift, and go to state 85

    logical_operator  go to state 86


State 58

   46 condition: relation •

    $default  reduce using rule 46 (condition)


State 59

   47 relation: expression • RELOP expression
   53 expression: expression • ADDOP term
   54           | expression • REMOP term
   66 primary: expression • EXOP expression

    ADDOP  shift, and go to state 68
    RELOP  shift, and go to state 87
    REMOP  shift, and go to state 69
    EXOP   shift, and go to state 70


State 60

   53 expression: expression • ADDOP term
   54           | expression • REMOP term
   59 primary: NEGOP expression •
   66        | expression • EXOP expression

    ADDOP  shift, and go to state 68
    REMOP  shift, and go to state 69
    EXOP   shift, and go to state 70

    ADDOP     [reduce using rule 59 (primary)]
    REMOP     [reduce using rule 59 (primary)]
    EXOP      [reduce using rule 59 (primary)]
    $default  reduce using rule 59 (primary)


State 61

   35 direction: LEFT •

    $default  reduce using rule 35 (direction)


State 62

   36 direction: RIGHT •

    $default  reduce using rule 36 (direction)


State 63

   31 statement: FOLD direction • operator list_choice ENDFOLD

    ADDOP  shift, and go to state 88
    MULOP  shift, and go to state 89

    operator  go to state 90


State 64

   30 statement: IF condition • THEN statement_ elsif_statements ELSE statement_ ENDIF
   45 condition: condition • ANDOP relation
   48 relation: condition • logical_operator condition

    ANDOP  shift, and go to state 82
    OROP   shift, and go to state 83
    NOTOP  shift, and go to state 84
    THEN   shift, and go to state 91

    logical_operator  go to state 86


State 65

   53 expression: expression • ADDOP term
   54           | expression • REMOP term
   58 primary: '(' expression • ')'
   66        | expression • EXOP expression

    ADDOP  shift, and go to state 68
    REMOP  shift, and go to state 69
    EXOP   shift, and go to state 70
    ')'    shift, and go to state 92


State 66

   24 body: BEGIN_ statement_ END • ';'

    ';'  shift, and go to state 93


State 67

   25 statement_: statement ';' •

    $default  reduce using rule 25 (statement_)


State 68

   53 expression: expression ADDOP • term

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 41

    expression  go to state 94
    term        go to state 95
    primary     go to state 46


State 69

   54 expression: expression REMOP • term

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 41

    expression  go to state 94
    term        go to state 96
    primary     go to state 46


State 70

   66 primary: expression EXOP • expression

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 41

    expression  go to state 97
    term        go to state 45
    primary     go to state 46


State 71

   56 term: term MULOP • primary

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 41

    expression  go to state 94
    term        go to state 45
    primary     go to state 98


State 72

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 73

    7 type: LIST OF type •

    $default  reduce using rule 7 (type)


State 74

   16 list: '(' • expressions ')'
   58 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 41

    expressions  go to state 99
    expression   go to state 100
    term         go to state 45
    primary      go to state 46


State 75

   13 variable: IDENTIFIER ':' type IS list • ';'

    ';'  shift, and go to state 101


State 76

   14 variable: IDENTIFIER ':' type IS expression • ';'
   53 expression: expression • ADDOP term
   54           | expression • REMOP term
   66 primary: expression • EXOP expression

    ADDOP  shift, and go to state 68
    REMOP  shift, and go to state 69
    EXOP   shift, and go to state 70
    ';'    shift, and go to state 102


State 77

   53 expression: expression • ADDOP term
   54           | expression • REMOP term
   64 primary: IDENTIFIER '(' expression • ')'
   66        | expression • EXOP expression

    ADDOP  shift, and go to state 68
    REMOP  shift, and go to state 69
    EXOP   shift, and go to state 70
    ')'    shift, and go to state 103


State 78

   29 statement: SWITCH expression IS • cases OTHERS ARROW statement ';' ENDSWITCH

    $default  reduce using rule 42 (cases)

    cases  go to state 104


State 79

   45 condition: condition • ANDOP relation
   48 relation: condition • logical_operator condition
   50         | NOTOP condition •

    ANDOP  shift, and go to state 82
    OROP   shift, and go to state 83
    NOTOP  shift, and go to state 84

    ANDOP     [reduce using rule 50 (relation)]
    OROP      [reduce using rule 50 (relation)]
    NOTOP     [reduce using rule 50 (relation)]
    $default  reduce using rule 50 (relation)

    logical_operator  go to state 86


State 80

   45 condition: condition • ANDOP relation
   48 relation: condition • logical_operator condition
   49         | '(' condition • ')'

    ANDOP  shift, and go to state 82
    OROP   shift, and go to state 83
    NOTOP  shift, and go to state 84
    ')'    shift, and go to state 105

    logical_operator  go to state 86


State 81

   47 relation: expression • RELOP expression
   53 expression: expression • ADDOP term
   54           | expression • REMOP term
   58 primary: '(' expression • ')'
   66        | expression • EXOP expression

    ADDOP  shift, and go to state 68
    RELOP  shift, and go to state 87
    REMOP  shift, and go to state 69
    EXOP   shift, and go to state 70
    ')'    shift, and go to state 92


State 82

   45 condition: condition ANDOP • relation

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    NOTOP         shift, and go to state 55
    '('           shift, and go to state 56

    condition   go to state 106
    relation    go to state 107
    expression  go to state 59
    term        go to state 45
    primary     go to state 46


State 83

   51 logical_operator: OROP •

    $default  reduce using rule 51 (logical_operator)


State 84

   52 logical_operator: NOTOP •

    $default  reduce using rule 52 (logical_operator)


State 85

   28 statement: WHEN condition ',' • expression ':' expression

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 41

    expression  go to state 108
    term        go to state 45
    primary     go to state 46


State 86

   48 relation: condition logical_operator • condition

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    NOTOP         shift, and go to state 55
    '('           shift, and go to state 56

    condition   go to state 109
    relation    go to state 58
    expression  go to state 59
    term        go to state 45
    primary     go to state 46


State 87

   47 relation: expression RELOP • expression

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 41

    expression  go to state 110
    term        go to state 45
    primary     go to state 46


State 88

   37 operator: ADDOP •

    $default  reduce using rule 37 (operator)


State 89

   38 operator: MULOP •

    $default  reduce using rule 38 (operator)


State 90

   31 statement: FOLD direction operator • list_choice ENDFOLD

    IDENTIFIER  shift, and go to state 111
    '('         shift, and go to state 112

    list         go to state 113
    list_choice  go to state 114


State 91

   30 statement: IF condition THEN • statement_ elsif_statements ELSE statement_ ENDIF

    error         shift, and go to state 30
    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    SWITCH        shift, and go to state 36
    WHEN          shift, and go to state 37
    NEGOP         shift, and go to state 38
    FOLD          shift, and go to state 39
    IF            shift, and go to state 40
    '('           shift, and go to state 41

    statement_  go to state 115
    statement   go to state 43
    expression  go to state 44
    term        go to state 45
    primary     go to state 46


State 92

   58 primary: '(' expression ')' •

    $default  reduce using rule 58 (primary)


State 93

   24 body: BEGIN_ statement_ END ';' •

    $default  reduce using rule 24 (body)


State 94

   53 expression: expression • ADDOP term
   54           | expression • REMOP term
   66 primary: expression • EXOP expression

    ADDOP  shift, and go to state 68
    REMOP  shift, and go to state 69
    EXOP   shift, and go to state 70


State 95

   53 expression: expression ADDOP term •
   55           | term •
   56 term: term • MULOP primary

    MULOP  shift, and go to state 71

    ADDOP     reduce using rule 53 (expression)
    ADDOP     [reduce using rule 55 (expression)]
    MULOP     [reduce using rule 53 (expression)]
    REMOP     reduce using rule 53 (expression)
    REMOP     [reduce using rule 55 (expression)]
    EXOP      reduce using rule 53 (expression)
    EXOP      [reduce using rule 55 (expression)]
    $default  reduce using rule 53 (expression)


State 96

   54 expression: expression REMOP term •
   55           | term •
   56 term: term • MULOP primary

    MULOP  shift, and go to state 71

    ADDOP     reduce using rule 54 (expression)
    ADDOP     [reduce using rule 55 (expression)]
    MULOP     [reduce using rule 54 (expression)]
    REMOP     reduce using rule 54 (expression)
    REMOP     [reduce using rule 55 (expression)]
    EXOP      reduce using rule 54 (expression)
    EXOP      [reduce using rule 55 (expression)]
    $default  reduce using rule 54 (expression)


State 97

   53 expression: expression • ADDOP term
   54           | expression • REMOP term
   66 primary: expression • EXOP expression
   66        | expression EXOP expression •

    ADDOP  shift, and go to state 68
    REMOP  shift, and go to state 69
    EXOP   shift, and go to state 70

    ADDOP     [reduce using rule 66 (primary)]
    REMOP     [reduce using rule 66 (primary)]
    EXOP      [reduce using rule 66 (primary)]
    $default  reduce using rule 66 (primary)


State 98

   56 term: term MULOP primary •
   57     | primary •

    ADDOP     reduce using rule 56 (term)
    ADDOP     [reduce using rule 57 (term)]
    MULOP     reduce using rule 56 (term)
    MULOP     [reduce using rule 57 (term)]
    REMOP     reduce using rule 56 (term)
    REMOP     [reduce using rule 57 (term)]
    EXOP      reduce using rule 56 (term)
    EXOP      [reduce using rule 57 (term)]
    $default  reduce using rule 56 (term)


State 99

   16 list: '(' expressions • ')'
   22 expressions: expressions • ',' expression

    ')'  shift, and go to state 116
    ','  shift, and go to state 117


State 100

   23 expressions: expression •
   53 expression: expression • ADDOP term
   54           | expression • REMOP term
   58 primary: '(' expression • ')'
   66        | expression • EXOP expression

    ADDOP  shift, and go to state 68
    REMOP  shift, and go to state 69
    EXOP   shift, and go to state 70
    ')'    shift, and go to state 92

    ')'       [reduce using rule 23 (expressions)]
    $default  reduce using rule 23 (expressions)


State 101

   13 variable: IDENTIFIER ':' type IS list ';' •

    $default  reduce using rule 13 (variable)


State 102

   14 variable: IDENTIFIER ':' type IS expression ';' •

    $default  reduce using rule 14 (variable)


State 103

   64 primary: IDENTIFIER '(' expression ')' •

    $default  reduce using rule 64 (primary)


State 104

   29 statement: SWITCH expression IS cases • OTHERS ARROW statement ';' ENDSWITCH
   41 cases: cases • case

    error   shift, and go to state 118
    CASE    shift, and go to state 119
    OTHERS  shift, and go to state 120

    case  go to state 121


State 105

   49 relation: '(' condition ')' •

    $default  reduce using rule 49 (relation)


State 106

   45 condition: condition • ANDOP relation
   48 relation: condition • logical_operator condition

    ANDOP  shift, and go to state 82
    OROP   shift, and go to state 83
    NOTOP  shift, and go to state 84

    logical_operator  go to state 86


State 107

   45 condition: condition ANDOP relation •
   46          | relation •

    ANDOP     reduce using rule 45 (condition)
    ANDOP     [reduce using rule 46 (condition)]
    OROP      reduce using rule 45 (condition)
    OROP      [reduce using rule 46 (condition)]
    NOTOP     reduce using rule 45 (condition)
    NOTOP     [reduce using rule 46 (condition)]
    $default  reduce using rule 45 (condition)


State 108

   28 statement: WHEN condition ',' expression • ':' expression
   53 expression: expression • ADDOP term
   54           | expression • REMOP term
   66 primary: expression • EXOP expression

    ADDOP  shift, and go to state 68
    REMOP  shift, and go to state 69
    EXOP   shift, and go to state 70
    ':'    shift, and go to state 122


State 109

   45 condition: condition • ANDOP relation
   48 relation: condition • logical_operator condition
   48         | condition logical_operator condition •

    ANDOP  shift, and go to state 82
    OROP   shift, and go to state 83
    NOTOP  shift, and go to state 84

    ANDOP     [reduce using rule 48 (relation)]
    OROP      [reduce using rule 48 (relation)]
    NOTOP     [reduce using rule 48 (relation)]
    $default  reduce using rule 48 (relation)

    logical_operator  go to state 86


State 110

   47 relation: expression RELOP expression •
   53 expression: expression • ADDOP term
   54           | expression • REMOP term
   66 primary: expression • EXOP expression

    ADDOP  shift, and go to state 68
    REMOP  shift, and go to state 69
    EXOP   shift, and go to state 70

    $default  reduce using rule 47 (relation)


State 111

   40 list_choice: IDENTIFIER •

    $default  reduce using rule 40 (list_choice)


State 112

   16 list: '(' • expressions ')'

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 41

    expressions  go to state 99
    expression   go to state 123
    term         go to state 45
    primary      go to state 46


State 113

   39 list_choice: list •

    $default  reduce using rule 39 (list_choice)


State 114

   31 statement: FOLD direction operator list_choice • ENDFOLD

    ENDFOLD  shift, and go to state 124


State 115

   30 statement: IF condition THEN statement_ • elsif_statements ELSE statement_ ENDIF

    ELSIF  shift, and go to state 125

    $default  reduce using rule 33 (elsif_statements)

    elsif_statements  go to state 126
    elsif_statement   go to state 127


State 116

   16 list: '(' expressions ')' •

    $default  reduce using rule 16 (list)


State 117

   22 expressions: expressions ',' • expression

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 41

    expression  go to state 128
    term        go to state 45
    primary     go to state 46


State 118

   44 case: error • ';'

    ';'  shift, and go to state 129


State 119

   43 case: CASE • INT_LITERAL ARROW statement ';'

    INT_LITERAL  shift, and go to state 130


State 120

   29 statement: SWITCH expression IS cases OTHERS • ARROW statement ';' ENDSWITCH

    ARROW  shift, and go to state 131


State 121

   41 cases: cases case •

    $default  reduce using rule 41 (cases)


State 122

   28 statement: WHEN condition ',' expression ':' • expression

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 41

    expression  go to state 132
    term        go to state 45
    primary     go to state 46


State 123

   23 expressions: expression •
   53 expression: expression • ADDOP term
   54           | expression • REMOP term
   66 primary: expression • EXOP expression

    ADDOP  shift, and go to state 68
    REMOP  shift, and go to state 69
    EXOP   shift, and go to state 70

    $default  reduce using rule 23 (expressions)


State 124

   31 statement: FOLD direction operator list_choice ENDFOLD •

    $default  reduce using rule 31 (statement)


State 125

   34 elsif_statement: ELSIF • condition THEN statement_

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    NOTOP         shift, and go to state 55
    '('           shift, and go to state 56

    condition   go to state 133
    relation    go to state 58
    expression  go to state 59
    term        go to state 45
    primary     go to state 46


State 126

   30 statement: IF condition THEN statement_ elsif_statements • ELSE statement_ ENDIF

    ELSE  shift, and go to state 134


State 127

   32 elsif_statements: elsif_statement • elsif_statements

    ELSIF  shift, and go to state 125

    $default  reduce using rule 33 (elsif_statements)

    elsif_statements  go to state 135
    elsif_statement   go to state 127


State 128

   22 expressions: expressions ',' expression •
   53 expression: expression • ADDOP term
   54           | expression • REMOP term
   66 primary: expression • EXOP expression

    ADDOP  shift, and go to state 68
    REMOP  shift, and go to state 69
    EXOP   shift, and go to state 70

    $default  reduce using rule 22 (expressions)


State 129

   44 case: error ';' •

    $default  reduce using rule 44 (case)


State 130

   43 case: CASE INT_LITERAL • ARROW statement ';'

    ARROW  shift, and go to state 136


State 131

   29 statement: SWITCH expression IS cases OTHERS ARROW • statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    SWITCH        shift, and go to state 36
    WHEN          shift, and go to state 37
    NEGOP         shift, and go to state 38
    FOLD          shift, and go to state 39
    IF            shift, and go to state 40
    '('           shift, and go to state 41

    statement   go to state 137
    expression  go to state 44
    term        go to state 45
    primary     go to state 46


State 132

   28 statement: WHEN condition ',' expression ':' expression •
   53 expression: expression • ADDOP term
   54           | expression • REMOP term
   66 primary: expression • EXOP expression

    ADDOP  shift, and go to state 68
    REMOP  shift, and go to state 69
    EXOP   shift, and go to state 70

    $default  reduce using rule 28 (statement)


State 133

   34 elsif_statement: ELSIF condition • THEN statement_
   45 condition: condition • ANDOP relation
   48 relation: condition • logical_operator condition

    ANDOP  shift, and go to state 82
    OROP   shift, and go to state 83
    NOTOP  shift, and go to state 84
    THEN   shift, and go to state 138

    logical_operator  go to state 86


State 134

   30 statement: IF condition THEN statement_ elsif_statements ELSE • statement_ ENDIF

    error         shift, and go to state 30
    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    SWITCH        shift, and go to state 36
    WHEN          shift, and go to state 37
    NEGOP         shift, and go to state 38
    FOLD          shift, and go to state 39
    IF            shift, and go to state 40
    '('           shift, and go to state 41

    statement_  go to state 139
    statement   go to state 43
    expression  go to state 44
    term        go to state 45
    primary     go to state 46


State 135

   32 elsif_statements: elsif_statement elsif_statements •

    $default  reduce using rule 32 (elsif_statements)


State 136

   43 case: CASE INT_LITERAL ARROW • statement ';'

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    SWITCH        shift, and go to state 36
    WHEN          shift, and go to state 37
    NEGOP         shift, and go to state 38
    FOLD          shift, and go to state 39
    IF            shift, and go to state 40
    '('           shift, and go to state 41

    statement   go to state 140
    expression  go to state 44
    term        go to state 45
    primary     go to state 46


State 137

   29 statement: SWITCH expression IS cases OTHERS ARROW statement • ';' ENDSWITCH

    ';'  shift, and go to state 141


State 138

   34 elsif_statement: ELSIF condition THEN • statement_

    error         shift, and go to state 30
    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    SWITCH        shift, and go to state 36
    WHEN          shift, and go to state 37
    NEGOP         shift, and go to state 38
    FOLD          shift, and go to state 39
    IF            shift, and go to state 40
    '('           shift, and go to state 41

    statement_  go to state 142
    statement   go to state 43
    expression  go to state 44
    term        go to state 45
    primary     go to state 46


State 139

   30 statement: IF condition THEN statement_ elsif_statements ELSE statement_ • ENDIF

    ENDIF  shift, and go to state 143


State 140

   43 case: CASE INT_LITERAL ARROW statement • ';'

    ';'  shift, and go to state 144


State 141

   29 statement: SWITCH expression IS cases OTHERS ARROW statement ';' • ENDSWITCH

    ENDSWITCH  shift, and go to state 145


State 142

   34 elsif_statement: ELSIF condition THEN statement_ •

    $default  reduce using rule 34 (elsif_statement)


State 143

   30 statement: IF condition THEN statement_ elsif_statements ELSE statement_ ENDIF •

    $default  reduce using rule 30 (statement)


State 144

   43 case: CASE INT_LITERAL ARROW statement ';' •

    $default  reduce using rule 43 (case)


State 145

   29 statement: SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH •

    $default  reduce using rule 29 (statement)
