State 12 conflicts: 1 reduce/reduce
State 45 conflicts: 1 shift/reduce
State 60 conflicts: 3 shift/reduce
State 78 conflicts: 3 shift/reduce
State 94 conflicts: 1 shift/reduce, 3 reduce/reduce
State 95 conflicts: 3 shift/reduce
State 96 conflicts: 4 reduce/reduce
State 103 conflicts: 3 reduce/reduce
State 105 conflicts: 3 shift/reduce


Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';'
    3                | error ';'

    4 type: INTEGER
    5     | REAL
    6     | CHARACTER

    7 optional_variable: variable_list
    8                  | variable
    9                  | ε

   10 variable_list: variable
   11              | variable_list variable

   12 variable: IDENTIFIER ':' type IS statement ';'
   13         | IDENTIFIER ':' LIST OF type IS list ';'
   14         | error ';'

   15 list: '(' expressions ')'

   16 parameters: parameter_list
   17           | ε

   18 parameter_list: parameter
   19               | parameter_list ',' parameter

   20 parameter: IDENTIFIER ':' type

   21 expressions: expressions ',' expression
   22            | expression

   23 body: BEGIN_ statement_ END ';'

   24 statement_: statement ';'
   25           | error ';'

   26 statement: expression
   27          | WHEN condition ',' expression ':' expression
   28          | SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH
   29          | IF condition THEN statement_ elsif_statements ELSE statement_ ENDIF
   30          | FOLD direction operator list_choice ENDFOLD

   31 elsif_statements: elsif_statement elsif_statements
   32                 | ε

   33 elsif_statement: ELSIF condition THEN statement_

   34 direction: LEFT
   35          | RIGHT

   36 operator: ADDOP
   37         | MULOP

   38 list_choice: list
   39            | IDENTIFIER

   40 cases: cases case
   41      | ε

   42 case: CASE INT_LITERAL ARROW statement ';'
   43     | error ';'

   44 condition: condition ANDOP relation
   45          | relation

   46 relation: expression RELOP expression
   47         | condition logical_operator condition
   48         | '(' condition ')'
   49         | NOTOP condition

   50 logical_operator: OROP
   51                 | NOTOP

   52 expression: expression ADDOP term
   53           | term

   54 term: term MULOP primary
   55     | primary

   56 primary: '(' expression ')'
   57        | expression arithmetic_operator expression
   58        | NEGOP expression
   59        | INT_LITERAL
   60        | HEX_LITERAL
   61        | CHAR_LITERAL
   62        | REAL_LITERAL
   63        | IDENTIFIER '(' expression ')'
   64        | IDENTIFIER

   65 arithmetic_operator: REMOP
   66                    | EXOP


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 15 48 56 63
    ')' (41) 15 48 56 63
    ',' (44) 19 21 27
    ':' (58) 12 13 20 27
    ';' (59) 2 3 12 13 14 23 24 25 28 42 43
    error (256) 3 14 25 43
    IDENTIFIER <iden> (258) 2 12 13 20 39 63 64
    INT_LITERAL <type> (259) 42 59
    CHAR_LITERAL <type> (260) 61
    REAL_LITERAL <type> (261) 62
    HEX_LITERAL <type> (262) 60
    ADDOP (263) 36 52
    MULOP (264) 37 54
    RELOP (265) 46
    ANDOP (266) 44
    ARROW (267) 28 42
    BEGIN_ (268) 23
    CASE (269) 42
    CHARACTER (270) 6
    ELSE (271) 29
    END (272) 23
    ENDSWITCH (273) 28
    FUNCTION (274) 2
    INTEGER (275) 4
    IS (276) 12 13 28
    LIST (277) 13
    OF (278) 13
    OTHERS (279) 28
    RETURNS (280) 2
    SWITCH (281) 28
    WHEN (282) 27
    REMOP (283) 65
    EXOP (284) 66
    NEGOP (285) 58
    OROP (286) 50
    NOTOP (287) 49 51
    ELSIF (288) 33
    ENDFOLD (289) 30
    ENDIF (290) 29
    FOLD (291) 30
    IF (292) 29
    LEFT (293) 34
    REAL (294) 5
    RIGHT (295) 35
    THEN (296) 29 33


Nonterminals, with rules where they appear

    $accept (47)
        on left: 0
    function (48)
        on left: 1
        on right: 0
    function_header (49)
        on left: 2 3
        on right: 1
    type <type> (50)
        on left: 4 5 6
        on right: 2 12 13 20
    optional_variable (51)
        on left: 7 8 9
        on right: 1
    variable_list (52)
        on left: 10 11
        on right: 7 11
    variable (53)
        on left: 12 13 14
        on right: 8 10 11
    list <type> (54)
        on left: 15
        on right: 13 38
    parameters (55)
        on left: 16 17
        on right: 2
    parameter_list (56)
        on left: 18 19
        on right: 16 19
    parameter (57)
        on left: 20
        on right: 18 19
    expressions <type> (58)
        on left: 21 22
        on right: 15 21
    body <type> (59)
        on left: 23
        on right: 1
    statement_ <type> (60)
        on left: 24 25
        on right: 23 29 33
    statement <type> (61)
        on left: 26 27 28 29 30
        on right: 12 24 28 42
    elsif_statements (62)
        on left: 31 32
        on right: 29 31
    elsif_statement (63)
        on left: 33
        on right: 31
    direction (64)
        on left: 34 35
        on right: 30
    operator (65)
        on left: 36 37
        on right: 30
    list_choice (66)
        on left: 38 39
        on right: 30
    cases <type> (67)
        on left: 40 41
        on right: 28 40
    case <type> (68)
        on left: 42 43
        on right: 40
    condition (69)
        on left: 44 45
        on right: 27 29 33 44 47 48 49
    relation (70)
        on left: 46 47 48 49
        on right: 44 45
    logical_operator (71)
        on left: 50 51
        on right: 47
    expression <type> (72)
        on left: 52 53
        on right: 21 22 26 27 28 46 52 56 57 58 63
    term <type> (73)
        on left: 54 55
        on right: 52 53 54
    primary <type> (74)
        on left: 56 57 58 59 60 61 62 63 64
        on right: 54 55
    arithmetic_operator (75)
        on left: 65 66
        on right: 57


State 0

    0 $accept: • function $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    function         go to state 3
    function_header  go to state 4


State 1

    3 function_header: error • ';'

    ';'  shift, and go to state 5


State 2

    2 function_header: FUNCTION • IDENTIFIER parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 6


State 3

    0 $accept: function • $end

    $end  shift, and go to state 7


State 4

    1 function: function_header • optional_variable body

    error       shift, and go to state 8
    IDENTIFIER  shift, and go to state 9

    BEGIN_  reduce using rule 9 (optional_variable)

    optional_variable  go to state 10
    variable_list      go to state 11
    variable           go to state 12


State 5

    3 function_header: error ';' •

    $default  reduce using rule 3 (function_header)


State 6

    2 function_header: FUNCTION IDENTIFIER • parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 13

    $default  reduce using rule 17 (parameters)

    parameters      go to state 14
    parameter_list  go to state 15
    parameter       go to state 16


State 7

    0 $accept: function $end •

    $default  accept


State 8

   14 variable: error • ';'

    ';'  shift, and go to state 17


State 9

   12 variable: IDENTIFIER • ':' type IS statement ';'
   13         | IDENTIFIER • ':' LIST OF type IS list ';'

    ':'  shift, and go to state 18


State 10

    1 function: function_header optional_variable • body

    BEGIN_  shift, and go to state 19

    body  go to state 20


State 11

    7 optional_variable: variable_list •
   11 variable_list: variable_list • variable

    error       shift, and go to state 8
    IDENTIFIER  shift, and go to state 9

    BEGIN_  reduce using rule 7 (optional_variable)

    variable  go to state 21


State 12

    8 optional_variable: variable •
   10 variable_list: variable •

    BEGIN_    reduce using rule 8 (optional_variable)
    BEGIN_    [reduce using rule 10 (variable_list)]
    $default  reduce using rule 10 (variable_list)


State 13

   20 parameter: IDENTIFIER • ':' type

    ':'  shift, and go to state 22


State 14

    2 function_header: FUNCTION IDENTIFIER parameters • RETURNS type ';'

    RETURNS  shift, and go to state 23


State 15

   16 parameters: parameter_list •
   19 parameter_list: parameter_list • ',' parameter

    ','  shift, and go to state 24

    $default  reduce using rule 16 (parameters)


State 16

   18 parameter_list: parameter •

    $default  reduce using rule 18 (parameter_list)


State 17

   14 variable: error ';' •

    $default  reduce using rule 14 (variable)


State 18

   12 variable: IDENTIFIER ':' • type IS statement ';'
   13         | IDENTIFIER ':' • LIST OF type IS list ';'

    CHARACTER  shift, and go to state 25
    INTEGER    shift, and go to state 26
    LIST       shift, and go to state 27
    REAL       shift, and go to state 28

    type  go to state 29


State 19

   23 body: BEGIN_ • statement_ END ';'

    error         shift, and go to state 30
    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    SWITCH        shift, and go to state 36
    WHEN          shift, and go to state 37
    NEGOP         shift, and go to state 38
    FOLD          shift, and go to state 39
    IF            shift, and go to state 40
    '('           shift, and go to state 41

    statement_  go to state 42
    statement   go to state 43
    expression  go to state 44
    term        go to state 45
    primary     go to state 46


State 20

    1 function: function_header optional_variable body •

    $default  reduce using rule 1 (function)


State 21

   11 variable_list: variable_list variable •

    $default  reduce using rule 11 (variable_list)


State 22

   20 parameter: IDENTIFIER ':' • type

    CHARACTER  shift, and go to state 25
    INTEGER    shift, and go to state 26
    REAL       shift, and go to state 28

    type  go to state 47


State 23

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS • type ';'

    CHARACTER  shift, and go to state 25
    INTEGER    shift, and go to state 26
    REAL       shift, and go to state 28

    type  go to state 48


State 24

   19 parameter_list: parameter_list ',' • parameter

    IDENTIFIER  shift, and go to state 13

    parameter  go to state 49


State 25

    6 type: CHARACTER •

    $default  reduce using rule 6 (type)


State 26

    4 type: INTEGER •

    $default  reduce using rule 4 (type)


State 27

   13 variable: IDENTIFIER ':' LIST • OF type IS list ';'

    OF  shift, and go to state 50


State 28

    5 type: REAL •

    $default  reduce using rule 5 (type)


State 29

   12 variable: IDENTIFIER ':' type • IS statement ';'

    IS  shift, and go to state 51


State 30

   25 statement_: error • ';'

    ';'  shift, and go to state 52


State 31

   63 primary: IDENTIFIER • '(' expression ')'
   64        | IDENTIFIER •

    '('  shift, and go to state 53

    $default  reduce using rule 64 (primary)


State 32

   59 primary: INT_LITERAL •

    $default  reduce using rule 59 (primary)


State 33

   61 primary: CHAR_LITERAL •

    $default  reduce using rule 61 (primary)


State 34

   62 primary: REAL_LITERAL •

    $default  reduce using rule 62 (primary)


State 35

   60 primary: HEX_LITERAL •

    $default  reduce using rule 60 (primary)


State 36

   28 statement: SWITCH • expression IS cases OTHERS ARROW statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 41

    expression  go to state 54
    term        go to state 45
    primary     go to state 46


State 37

   27 statement: WHEN • condition ',' expression ':' expression

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    NOTOP         shift, and go to state 55
    '('           shift, and go to state 56

    condition   go to state 57
    relation    go to state 58
    expression  go to state 59
    term        go to state 45
    primary     go to state 46


State 38

   58 primary: NEGOP • expression

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 41

    expression  go to state 60
    term        go to state 45
    primary     go to state 46


State 39

   30 statement: FOLD • direction operator list_choice ENDFOLD

    LEFT   shift, and go to state 61
    RIGHT  shift, and go to state 62

    direction  go to state 63


State 40

   29 statement: IF • condition THEN statement_ elsif_statements ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    NOTOP         shift, and go to state 55
    '('           shift, and go to state 56

    condition   go to state 64
    relation    go to state 58
    expression  go to state 59
    term        go to state 45
    primary     go to state 46


State 41

   56 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 41

    expression  go to state 65
    term        go to state 45
    primary     go to state 46


State 42

   23 body: BEGIN_ statement_ • END ';'

    END  shift, and go to state 66


State 43

   24 statement_: statement • ';'

    ';'  shift, and go to state 67


State 44

   26 statement: expression •
   52 expression: expression • ADDOP term
   57 primary: expression • arithmetic_operator expression

    ADDOP  shift, and go to state 68
    REMOP  shift, and go to state 69
    EXOP   shift, and go to state 70

    $default  reduce using rule 26 (statement)

    arithmetic_operator  go to state 71


State 45

   53 expression: term •
   54 term: term • MULOP primary

    MULOP  shift, and go to state 72

    MULOP     [reduce using rule 53 (expression)]
    $default  reduce using rule 53 (expression)


State 46

   55 term: primary •

    $default  reduce using rule 55 (term)


State 47

   20 parameter: IDENTIFIER ':' type •

    $default  reduce using rule 20 (parameter)


State 48

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type • ';'

    ';'  shift, and go to state 73


State 49

   19 parameter_list: parameter_list ',' parameter •

    $default  reduce using rule 19 (parameter_list)


State 50

   13 variable: IDENTIFIER ':' LIST OF • type IS list ';'

    CHARACTER  shift, and go to state 25
    INTEGER    shift, and go to state 26
    REAL       shift, and go to state 28

    type  go to state 74


State 51

   12 variable: IDENTIFIER ':' type IS • statement ';'

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    SWITCH        shift, and go to state 36
    WHEN          shift, and go to state 37
    NEGOP         shift, and go to state 38
    FOLD          shift, and go to state 39
    IF            shift, and go to state 40
    '('           shift, and go to state 41

    statement   go to state 75
    expression  go to state 44
    term        go to state 45
    primary     go to state 46


State 52

   25 statement_: error ';' •

    $default  reduce using rule 25 (statement_)


State 53

   63 primary: IDENTIFIER '(' • expression ')'

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 41

    expression  go to state 76
    term        go to state 45
    primary     go to state 46


State 54

   28 statement: SWITCH expression • IS cases OTHERS ARROW statement ';' ENDSWITCH
   52 expression: expression • ADDOP term
   57 primary: expression • arithmetic_operator expression

    ADDOP  shift, and go to state 68
    IS     shift, and go to state 77
    REMOP  shift, and go to state 69
    EXOP   shift, and go to state 70

    arithmetic_operator  go to state 71


State 55

   49 relation: NOTOP • condition

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    NOTOP         shift, and go to state 55
    '('           shift, and go to state 56

    condition   go to state 78
    relation    go to state 58
    expression  go to state 59
    term        go to state 45
    primary     go to state 46


State 56

   48 relation: '(' • condition ')'
   56 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    NOTOP         shift, and go to state 55
    '('           shift, and go to state 56

    condition   go to state 79
    relation    go to state 58
    expression  go to state 80
    term        go to state 45
    primary     go to state 46


State 57

   27 statement: WHEN condition • ',' expression ':' expression
   44 condition: condition • ANDOP relation
   47 relation: condition • logical_operator condition

    ANDOP  shift, and go to state 81
    OROP   shift, and go to state 82
    NOTOP  shift, and go to state 83
    ','    shift, and go to state 84

    logical_operator  go to state 85


State 58

   45 condition: relation •

    $default  reduce using rule 45 (condition)


State 59

   46 relation: expression • RELOP expression
   52 expression: expression • ADDOP term
   57 primary: expression • arithmetic_operator expression

    ADDOP  shift, and go to state 68
    RELOP  shift, and go to state 86
    REMOP  shift, and go to state 69
    EXOP   shift, and go to state 70

    arithmetic_operator  go to state 71


State 60

   52 expression: expression • ADDOP term
   57 primary: expression • arithmetic_operator expression
   58        | NEGOP expression •

    ADDOP  shift, and go to state 68
    REMOP  shift, and go to state 69
    EXOP   shift, and go to state 70

    ADDOP     [reduce using rule 58 (primary)]
    REMOP     [reduce using rule 58 (primary)]
    EXOP      [reduce using rule 58 (primary)]
    $default  reduce using rule 58 (primary)

    arithmetic_operator  go to state 71


State 61

   34 direction: LEFT •

    $default  reduce using rule 34 (direction)


State 62

   35 direction: RIGHT •

    $default  reduce using rule 35 (direction)


State 63

   30 statement: FOLD direction • operator list_choice ENDFOLD

    ADDOP  shift, and go to state 87
    MULOP  shift, and go to state 88

    operator  go to state 89


State 64

   29 statement: IF condition • THEN statement_ elsif_statements ELSE statement_ ENDIF
   44 condition: condition • ANDOP relation
   47 relation: condition • logical_operator condition

    ANDOP  shift, and go to state 81
    OROP   shift, and go to state 82
    NOTOP  shift, and go to state 83
    THEN   shift, and go to state 90

    logical_operator  go to state 85


State 65

   52 expression: expression • ADDOP term
   56 primary: '(' expression • ')'
   57        | expression • arithmetic_operator expression

    ADDOP  shift, and go to state 68
    REMOP  shift, and go to state 69
    EXOP   shift, and go to state 70
    ')'    shift, and go to state 91

    arithmetic_operator  go to state 71


State 66

   23 body: BEGIN_ statement_ END • ';'

    ';'  shift, and go to state 92


State 67

   24 statement_: statement ';' •

    $default  reduce using rule 24 (statement_)


State 68

   52 expression: expression ADDOP • term

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 41

    expression  go to state 93
    term        go to state 94
    primary     go to state 46


State 69

   65 arithmetic_operator: REMOP •

    $default  reduce using rule 65 (arithmetic_operator)


State 70

   66 arithmetic_operator: EXOP •

    $default  reduce using rule 66 (arithmetic_operator)


State 71

   57 primary: expression arithmetic_operator • expression

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 41

    expression  go to state 95
    term        go to state 45
    primary     go to state 46


State 72

   54 term: term MULOP • primary

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 41

    expression  go to state 93
    term        go to state 45
    primary     go to state 96


State 73

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 74

   13 variable: IDENTIFIER ':' LIST OF type • IS list ';'

    IS  shift, and go to state 97


State 75

   12 variable: IDENTIFIER ':' type IS statement • ';'

    ';'  shift, and go to state 98


State 76

   52 expression: expression • ADDOP term
   57 primary: expression • arithmetic_operator expression
   63        | IDENTIFIER '(' expression • ')'

    ADDOP  shift, and go to state 68
    REMOP  shift, and go to state 69
    EXOP   shift, and go to state 70
    ')'    shift, and go to state 99

    arithmetic_operator  go to state 71


State 77

   28 statement: SWITCH expression IS • cases OTHERS ARROW statement ';' ENDSWITCH

    $default  reduce using rule 41 (cases)

    cases  go to state 100


State 78

   44 condition: condition • ANDOP relation
   47 relation: condition • logical_operator condition
   49         | NOTOP condition •

    ANDOP  shift, and go to state 81
    OROP   shift, and go to state 82
    NOTOP  shift, and go to state 83

    ANDOP     [reduce using rule 49 (relation)]
    OROP      [reduce using rule 49 (relation)]
    NOTOP     [reduce using rule 49 (relation)]
    $default  reduce using rule 49 (relation)

    logical_operator  go to state 85


State 79

   44 condition: condition • ANDOP relation
   47 relation: condition • logical_operator condition
   48         | '(' condition • ')'

    ANDOP  shift, and go to state 81
    OROP   shift, and go to state 82
    NOTOP  shift, and go to state 83
    ')'    shift, and go to state 101

    logical_operator  go to state 85


State 80

   46 relation: expression • RELOP expression
   52 expression: expression • ADDOP term
   56 primary: '(' expression • ')'
   57        | expression • arithmetic_operator expression

    ADDOP  shift, and go to state 68
    RELOP  shift, and go to state 86
    REMOP  shift, and go to state 69
    EXOP   shift, and go to state 70
    ')'    shift, and go to state 91

    arithmetic_operator  go to state 71


State 81

   44 condition: condition ANDOP • relation

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    NOTOP         shift, and go to state 55
    '('           shift, and go to state 56

    condition   go to state 102
    relation    go to state 103
    expression  go to state 59
    term        go to state 45
    primary     go to state 46


State 82

   50 logical_operator: OROP •

    $default  reduce using rule 50 (logical_operator)


State 83

   51 logical_operator: NOTOP •

    $default  reduce using rule 51 (logical_operator)


State 84

   27 statement: WHEN condition ',' • expression ':' expression

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 41

    expression  go to state 104
    term        go to state 45
    primary     go to state 46


State 85

   47 relation: condition logical_operator • condition

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    NOTOP         shift, and go to state 55
    '('           shift, and go to state 56

    condition   go to state 105
    relation    go to state 58
    expression  go to state 59
    term        go to state 45
    primary     go to state 46


State 86

   46 relation: expression RELOP • expression

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 41

    expression  go to state 106
    term        go to state 45
    primary     go to state 46


State 87

   36 operator: ADDOP •

    $default  reduce using rule 36 (operator)


State 88

   37 operator: MULOP •

    $default  reduce using rule 37 (operator)


State 89

   30 statement: FOLD direction operator • list_choice ENDFOLD

    IDENTIFIER  shift, and go to state 107
    '('         shift, and go to state 108

    list         go to state 109
    list_choice  go to state 110


State 90

   29 statement: IF condition THEN • statement_ elsif_statements ELSE statement_ ENDIF

    error         shift, and go to state 30
    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    SWITCH        shift, and go to state 36
    WHEN          shift, and go to state 37
    NEGOP         shift, and go to state 38
    FOLD          shift, and go to state 39
    IF            shift, and go to state 40
    '('           shift, and go to state 41

    statement_  go to state 111
    statement   go to state 43
    expression  go to state 44
    term        go to state 45
    primary     go to state 46


State 91

   56 primary: '(' expression ')' •

    $default  reduce using rule 56 (primary)


State 92

   23 body: BEGIN_ statement_ END ';' •

    $default  reduce using rule 23 (body)


State 93

   52 expression: expression • ADDOP term
   57 primary: expression • arithmetic_operator expression

    ADDOP  shift, and go to state 68
    REMOP  shift, and go to state 69
    EXOP   shift, and go to state 70

    arithmetic_operator  go to state 71


State 94

   52 expression: expression ADDOP term •
   53           | term •
   54 term: term • MULOP primary

    MULOP  shift, and go to state 72

    ADDOP     reduce using rule 52 (expression)
    ADDOP     [reduce using rule 53 (expression)]
    MULOP     [reduce using rule 52 (expression)]
    REMOP     reduce using rule 52 (expression)
    REMOP     [reduce using rule 53 (expression)]
    EXOP      reduce using rule 52 (expression)
    EXOP      [reduce using rule 53 (expression)]
    $default  reduce using rule 52 (expression)


State 95

   52 expression: expression • ADDOP term
   57 primary: expression • arithmetic_operator expression
   57        | expression arithmetic_operator expression •

    ADDOP  shift, and go to state 68
    REMOP  shift, and go to state 69
    EXOP   shift, and go to state 70

    ADDOP     [reduce using rule 57 (primary)]
    REMOP     [reduce using rule 57 (primary)]
    EXOP      [reduce using rule 57 (primary)]
    $default  reduce using rule 57 (primary)

    arithmetic_operator  go to state 71


State 96

   54 term: term MULOP primary •
   55     | primary •

    ADDOP     reduce using rule 54 (term)
    ADDOP     [reduce using rule 55 (term)]
    MULOP     reduce using rule 54 (term)
    MULOP     [reduce using rule 55 (term)]
    REMOP     reduce using rule 54 (term)
    REMOP     [reduce using rule 55 (term)]
    EXOP      reduce using rule 54 (term)
    EXOP      [reduce using rule 55 (term)]
    $default  reduce using rule 54 (term)


State 97

   13 variable: IDENTIFIER ':' LIST OF type IS • list ';'

    '('  shift, and go to state 108

    list  go to state 112


State 98

   12 variable: IDENTIFIER ':' type IS statement ';' •

    $default  reduce using rule 12 (variable)


State 99

   63 primary: IDENTIFIER '(' expression ')' •

    $default  reduce using rule 63 (primary)


State 100

   28 statement: SWITCH expression IS cases • OTHERS ARROW statement ';' ENDSWITCH
   40 cases: cases • case

    error   shift, and go to state 113
    CASE    shift, and go to state 114
    OTHERS  shift, and go to state 115

    case  go to state 116


State 101

   48 relation: '(' condition ')' •

    $default  reduce using rule 48 (relation)


State 102

   44 condition: condition • ANDOP relation
   47 relation: condition • logical_operator condition

    ANDOP  shift, and go to state 81
    OROP   shift, and go to state 82
    NOTOP  shift, and go to state 83

    logical_operator  go to state 85


State 103

   44 condition: condition ANDOP relation •
   45          | relation •

    ANDOP     reduce using rule 44 (condition)
    ANDOP     [reduce using rule 45 (condition)]
    OROP      reduce using rule 44 (condition)
    OROP      [reduce using rule 45 (condition)]
    NOTOP     reduce using rule 44 (condition)
    NOTOP     [reduce using rule 45 (condition)]
    $default  reduce using rule 44 (condition)


State 104

   27 statement: WHEN condition ',' expression • ':' expression
   52 expression: expression • ADDOP term
   57 primary: expression • arithmetic_operator expression

    ADDOP  shift, and go to state 68
    REMOP  shift, and go to state 69
    EXOP   shift, and go to state 70
    ':'    shift, and go to state 117

    arithmetic_operator  go to state 71


State 105

   44 condition: condition • ANDOP relation
   47 relation: condition • logical_operator condition
   47         | condition logical_operator condition •

    ANDOP  shift, and go to state 81
    OROP   shift, and go to state 82
    NOTOP  shift, and go to state 83

    ANDOP     [reduce using rule 47 (relation)]
    OROP      [reduce using rule 47 (relation)]
    NOTOP     [reduce using rule 47 (relation)]
    $default  reduce using rule 47 (relation)

    logical_operator  go to state 85


State 106

   46 relation: expression RELOP expression •
   52 expression: expression • ADDOP term
   57 primary: expression • arithmetic_operator expression

    ADDOP  shift, and go to state 68
    REMOP  shift, and go to state 69
    EXOP   shift, and go to state 70

    $default  reduce using rule 46 (relation)

    arithmetic_operator  go to state 71


State 107

   39 list_choice: IDENTIFIER •

    $default  reduce using rule 39 (list_choice)


State 108

   15 list: '(' • expressions ')'

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 41

    expressions  go to state 118
    expression   go to state 119
    term         go to state 45
    primary      go to state 46


State 109

   38 list_choice: list •

    $default  reduce using rule 38 (list_choice)


State 110

   30 statement: FOLD direction operator list_choice • ENDFOLD

    ENDFOLD  shift, and go to state 120


State 111

   29 statement: IF condition THEN statement_ • elsif_statements ELSE statement_ ENDIF

    ELSIF  shift, and go to state 121

    $default  reduce using rule 32 (elsif_statements)

    elsif_statements  go to state 122
    elsif_statement   go to state 123


State 112

   13 variable: IDENTIFIER ':' LIST OF type IS list • ';'

    ';'  shift, and go to state 124


State 113

   43 case: error • ';'

    ';'  shift, and go to state 125


State 114

   42 case: CASE • INT_LITERAL ARROW statement ';'

    INT_LITERAL  shift, and go to state 126


State 115

   28 statement: SWITCH expression IS cases OTHERS • ARROW statement ';' ENDSWITCH

    ARROW  shift, and go to state 127


State 116

   40 cases: cases case •

    $default  reduce using rule 40 (cases)


State 117

   27 statement: WHEN condition ',' expression ':' • expression

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 41

    expression  go to state 128
    term        go to state 45
    primary     go to state 46


State 118

   15 list: '(' expressions • ')'
   21 expressions: expressions • ',' expression

    ')'  shift, and go to state 129
    ','  shift, and go to state 130


State 119

   22 expressions: expression •
   52 expression: expression • ADDOP term
   57 primary: expression • arithmetic_operator expression

    ADDOP  shift, and go to state 68
    REMOP  shift, and go to state 69
    EXOP   shift, and go to state 70

    $default  reduce using rule 22 (expressions)

    arithmetic_operator  go to state 71


State 120

   30 statement: FOLD direction operator list_choice ENDFOLD •

    $default  reduce using rule 30 (statement)


State 121

   33 elsif_statement: ELSIF • condition THEN statement_

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    NOTOP         shift, and go to state 55
    '('           shift, and go to state 56

    condition   go to state 131
    relation    go to state 58
    expression  go to state 59
    term        go to state 45
    primary     go to state 46


State 122

   29 statement: IF condition THEN statement_ elsif_statements • ELSE statement_ ENDIF

    ELSE  shift, and go to state 132


State 123

   31 elsif_statements: elsif_statement • elsif_statements

    ELSIF  shift, and go to state 121

    $default  reduce using rule 32 (elsif_statements)

    elsif_statements  go to state 133
    elsif_statement   go to state 123


State 124

   13 variable: IDENTIFIER ':' LIST OF type IS list ';' •

    $default  reduce using rule 13 (variable)


State 125

   43 case: error ';' •

    $default  reduce using rule 43 (case)


State 126

   42 case: CASE INT_LITERAL • ARROW statement ';'

    ARROW  shift, and go to state 134


State 127

   28 statement: SWITCH expression IS cases OTHERS ARROW • statement ';' ENDSWITCH

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    SWITCH        shift, and go to state 36
    WHEN          shift, and go to state 37
    NEGOP         shift, and go to state 38
    FOLD          shift, and go to state 39
    IF            shift, and go to state 40
    '('           shift, and go to state 41

    statement   go to state 135
    expression  go to state 44
    term        go to state 45
    primary     go to state 46


State 128

   27 statement: WHEN condition ',' expression ':' expression •
   52 expression: expression • ADDOP term
   57 primary: expression • arithmetic_operator expression

    ADDOP  shift, and go to state 68
    REMOP  shift, and go to state 69
    EXOP   shift, and go to state 70

    $default  reduce using rule 27 (statement)

    arithmetic_operator  go to state 71


State 129

   15 list: '(' expressions ')' •

    $default  reduce using rule 15 (list)


State 130

   21 expressions: expressions ',' • expression

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    NEGOP         shift, and go to state 38
    '('           shift, and go to state 41

    expression  go to state 136
    term        go to state 45
    primary     go to state 46


State 131

   33 elsif_statement: ELSIF condition • THEN statement_
   44 condition: condition • ANDOP relation
   47 relation: condition • logical_operator condition

    ANDOP  shift, and go to state 81
    OROP   shift, and go to state 82
    NOTOP  shift, and go to state 83
    THEN   shift, and go to state 137

    logical_operator  go to state 85


State 132

   29 statement: IF condition THEN statement_ elsif_statements ELSE • statement_ ENDIF

    error         shift, and go to state 30
    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    SWITCH        shift, and go to state 36
    WHEN          shift, and go to state 37
    NEGOP         shift, and go to state 38
    FOLD          shift, and go to state 39
    IF            shift, and go to state 40
    '('           shift, and go to state 41

    statement_  go to state 138
    statement   go to state 43
    expression  go to state 44
    term        go to state 45
    primary     go to state 46


State 133

   31 elsif_statements: elsif_statement elsif_statements •

    $default  reduce using rule 31 (elsif_statements)


State 134

   42 case: CASE INT_LITERAL ARROW • statement ';'

    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    SWITCH        shift, and go to state 36
    WHEN          shift, and go to state 37
    NEGOP         shift, and go to state 38
    FOLD          shift, and go to state 39
    IF            shift, and go to state 40
    '('           shift, and go to state 41

    statement   go to state 139
    expression  go to state 44
    term        go to state 45
    primary     go to state 46


State 135

   28 statement: SWITCH expression IS cases OTHERS ARROW statement • ';' ENDSWITCH

    ';'  shift, and go to state 140


State 136

   21 expressions: expressions ',' expression •
   52 expression: expression • ADDOP term
   57 primary: expression • arithmetic_operator expression

    ADDOP  shift, and go to state 68
    REMOP  shift, and go to state 69
    EXOP   shift, and go to state 70

    $default  reduce using rule 21 (expressions)

    arithmetic_operator  go to state 71


State 137

   33 elsif_statement: ELSIF condition THEN • statement_

    error         shift, and go to state 30
    IDENTIFIER    shift, and go to state 31
    INT_LITERAL   shift, and go to state 32
    CHAR_LITERAL  shift, and go to state 33
    REAL_LITERAL  shift, and go to state 34
    HEX_LITERAL   shift, and go to state 35
    SWITCH        shift, and go to state 36
    WHEN          shift, and go to state 37
    NEGOP         shift, and go to state 38
    FOLD          shift, and go to state 39
    IF            shift, and go to state 40
    '('           shift, and go to state 41

    statement_  go to state 141
    statement   go to state 43
    expression  go to state 44
    term        go to state 45
    primary     go to state 46


State 138

   29 statement: IF condition THEN statement_ elsif_statements ELSE statement_ • ENDIF

    ENDIF  shift, and go to state 142


State 139

   42 case: CASE INT_LITERAL ARROW statement • ';'

    ';'  shift, and go to state 143


State 140

   28 statement: SWITCH expression IS cases OTHERS ARROW statement ';' • ENDSWITCH

    ENDSWITCH  shift, and go to state 144


State 141

   33 elsif_statement: ELSIF condition THEN statement_ •

    $default  reduce using rule 33 (elsif_statement)


State 142

   29 statement: IF condition THEN statement_ elsif_statements ELSE statement_ ENDIF •

    $default  reduce using rule 29 (statement)


State 143

   42 case: CASE INT_LITERAL ARROW statement ';' •

    $default  reduce using rule 42 (case)


State 144

   28 statement: SWITCH expression IS cases OTHERS ARROW statement ';' ENDSWITCH •

    $default  reduce using rule 28 (statement)
